import os
import win32com.client as win32
import openpyxl

def fill_and_save_word_to_pdf(input_docx, output_pdf, participant_data):
    try:
        # Create a Word application
        word = win32.gencache.EnsureDispatch('Word.Application')

        # Open the Word document
        doc = word.Documents.Open(input_docx)

        # Iterate through the story ranges in the document
        for story_range in doc.StoryRanges:
            # Search for the text "STUDENT NAME" and replace it with the participant's name
            find_text = "STUDENT NAME"
            while story_range.Find.Execute(find_text):
                story_range.Find.Execute(find_text)
                story_range.Text = story_range.Text.replace(find_text, participant_data)
        else :{
            print("can't find required data in excel sheet")

        }

        # Save the modified Word document as a temporary PDF
        temp_pdf = output_pdf + "_temp.pdf"
        doc.SaveAs(temp_pdf, FileFormat=17)  # FileFormat 17 corresponds to PDF
        story_range.Text = story_range.Text.replace(participant_data, 'STUDENT NAME')

        # Close the Word document
        doc.Close()

        # Close the Word application
        word.Quit()

        # Now, rename the PDF with the participant's name
        os.rename(temp_pdf, output_pdf)

        print(f"Certificate for {participant_data} saved as {output_pdf}")
    except Exception as e:
        print(f"An error occurred: {str(e)}")

# Function to generate certificates
def generate_certificates(input_excel_file, template_docx, output_dir):
    os.makedirs(output_dir, exist_ok=True)
    
    workbook = openpyxl.load_workbook(input_excel_file)
    sheet = workbook.active

    for row in sheet.iter_rows(min_row=2, values_only=True):
        participant_data = row[0]  # Assuming the name is in the first column
        output_pdf = os.path.join(output_dir, f"{participant_data}_certificate.pdf")
        fill_and_save_word_to_pdf(template_docx, output_pdf, participant_data)
        # You can add additional processing here, such as emailing the certificates or any other action you need.

# Usage
input_excel_file = r'INPUT_EXCEL_FILE'  # Path to the input Excel file
template_docx = r'INPUT_DOCUMENT'  # Path to the Word template
output_directory = r'OUTPUT_FOLDER'  # Output directory for the certificates

generate_certificates(input_excel_file, template_docx, output_directory)
